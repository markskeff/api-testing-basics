# API Testing Concepts

In this document, we'll cover some fundamental concepts related to API testing. Whether you're a complete beginner or looking to refresh your knowledge, this guide will help you understand the core principles.

## API (Application Programming Interface)

An API (Application Programming Interface) is a set of rules and protocols that allow different software applications to communicate with each other. APIs enable developers to request and exchange data and functionalities between applications.

## HTTP Methods

HTTP methods define the type of operation that should be performed on a resource. Here are some common HTTP methods used in API testing:

- **GET:** Retrieves data from the server.
- **POST:** Sends data to the server to create a new resource.
- **PUT:** Sends data to the server to update an existing resource.
- **DELETE:** Sends a request to remove a resource from the server.

## Request and Response

When working with APIs, communication occurs through requests and responses:

- A **request** is made by a client (such as your application) to the server, specifying the HTTP method and the endpoint (URL).
- The server processes the request and sends back a **response**, which includes a status code, headers, and the actual data (often in JSON format).

## Status Codes

HTTP status codes indicate the outcome of a request. They provide information about whether the request was successful, encountered an error, or requires further action. Some common status codes include:

- **200 OK:** Successful request.
- **201 Created:** Successful resource creation.
- **400 Bad Request:** Invalid request.
- **401 Unauthorized:** Authentication required or invalid credentials.
- **404 Not Found:** Requested resource does not exist.
- **500 Internal Server Error:** Server encountered an error.

## JSON (JavaScript Object Notation)

JSON is a lightweight data interchange format that is easy for humans to read and write, and easy for machines to parse and generate. JSON is often used to represent structured data in API responses. It consists of key-value pairs enclosed in curly braces:

```json
{
  "key": "value",
  "name": "John Doe",
  "age": 25,
  "isStudent": true
}
